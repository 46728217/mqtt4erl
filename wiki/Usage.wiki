 = Before You Begin =

Start the message persistence service:

{{{
mqtt_store:start().
}}}

 = Connecting =

 == Simple ==
{{{
mqtt_client:connect("172.16.50.128").
}}}

 returns {{{{ok, Pid}}}} on success

 == Advanced ==
{{{
mqtt_client:connect("172.16.50.128", Port, Options).
}}}

where:
 * {{{Port}}} is the port to connect to, eg {{{1883}}}
 * {{{Options}}} is an array which can contain:
  * {{{{client_id, ClientId}}}} specifies the id to connect as
  * {{{{keepalive, Seconds}}}} specifies how frequently in seconds to ping the broker eg {{{10}}} - note the client will explode if it does not receive a ping response before the next ping
  * {{{{retry, Seconds}}}} how frequently in seconds to resend QoS 1 or 2 messages that have not been acknowledged by the broker
  * {{{{clean_start, true}}}} forces the broker to drop pending messages and subscriptions for this client id
  * {{{{will, WillTopic, WillMessage, WillOptions}}}} specifies a message the broker will pass on when the client disconnects

 = Subscribing to a Topic =
 == Simple ==

{{{
mqtt_client:subscribe(R, Topic).
}}}

where {{{Topic}}} is the name of a topic to subscribe to, eg {{{"topic"}}}.

 = Unsubscribing to a Topic =
 == Simple ==

{{{
mqtt_client:unsubscribe(R, Topic).
}}}

where {{{Topic}}} is the name of a topic to unsubscribe from, eg {{{"topic"}}}.

 = Disconnecting =

{{{
mqtt_client:disconnect(Pid).
}}}

where {{{Pid}}} is a client pid returned by {{{mqtt_client:connect}}}.